SELECT *
FROM PORTOFOLIOSQL.dbo.CovidDeaths
ORDER BY 3,4

SELECT *
FROM PORTOFOLIOSQL.dbo.CovidVaccinations
ORDER BY 3,4

SELECT *
FROM PORTOFOLIOSQL..CovidDeaths
WHERE continent is not null
ORDER BY 3,4

--SELECT DATA that we are going to be using

SELECT Location, date, total_cases, new_cases, total_deaths, population
FROM PORTOFOLIOSQL..CovidDeaths
ORDER BY 1,2

--Looking at Total Cases vs Total Deaths
-- Shows likehood of dying if you contract covid in your country

SELECT location, date, total_cases, new_cases, total_deaths, (total_deaths/total_cases)*100 as DeathPercentage
FROM PORTOFOLIOSQL..CovidDeaths
WHERE Location like '%states%'
Order By 1,2

-- Looking at Total Cases vs Population
-- Shows what percentage of population got Covid

SELECT location, date, population, total_cases, (total_cases/population)*100 as PercentagePopulationInfected
FROM PORTOFOLIOSQL..CovidDeaths
WHERE Location like '%states%'
Order By 1,2

--looking at Country with highest infection rate compare to population

SELECT location, population, MAX(total_cases) as HighestInfectionCount, MAX((total_cases/population))*100 as PercentagePopulationInfected
FROM PORTOFOLIOSQL..CovidDeaths
--WHERE Location like '%states%'
GROUP BY location, population
Order By PercentagePopulationInfected desc

-- Showing Countries with Highest Death Count per Population

SELECT Location, MAX(total_deaths) as TotalDeathCount
FROM PORTOFOLIOSQL..CovidDeaths
GROUP BY location
ORDER BY TotalDeathCount desc

SELECT Location, MAX(cast(total_deaths as int)) as TotalDeathCount
FROM PORTOFOLIOSQL..CovidDeaths
GROUP BY location
ORDER BY TotalDeathCount desc

SELECT Location, MAX(cast(total_deaths as int)) as TotalDeathCount
FROM PORTOFOLIOSQL..CovidDeaths
WHERE continent is not null
GROUP BY location
ORDER BY TotalDeathCount desc


--LET'S BREAK THINGS DOWN BY CONTINENT

SELECT continent, MAX(cast(total_deaths as int)) as TotalDeathCount
FROM PORTOFOLIOSQL..CovidDeaths
WHERE continent is not null
GROUP BY continent

--Showing contintents with the highest death count per population

SELECT continent, MAX(cast(total_deaths as int)) as TotalDeathCount
FROM PORTOFOLIOSQL..CovidDeaths
WHERE continent is not null
GROUP BY continent
ORDER BY TotalDeathCount desc

-- GLOBAL NUMBERS

SELECT date, SUM(new_cases)--, (total_deaths/total_cases)*100 as DeatPercentage
FROM PORTOFOLIOSQL..CovidDeaths
WHERE continent is not null
GROUP BY date
Order By 1,2

SELECT date, SUM(new_cases) as total_cases, SUM(cast(new_deaths as int)), SUM(cast(new_deaths as int))/SUM(new_cases)*100 as DeathPercentage
FROM PORTOFOLIOSQL..CovidDeaths
WHERE continent is not null
GROUP BY date
Order By 1,2

SELECT SUM(new_cases) as total_cases, SUM(cast(new_deaths as int)), SUM(cast(new_deaths as int))/SUM(new_cases)*100 as DeathPercentage
FROM PORTOFOLIOSQL..CovidDeaths
WHERE continent is not null
--GROUP BY date
Order By 1,2

-- Looking at Total Population vs Vaccination

SELECT *
FROM PORTOFOLIOSQL..CovidDeaths dea
Join PORTOFOLIOSQL..CovidVaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
FROM PORTOFOLIOSQL..CovidDeaths dea
Join PORTOFOLIOSQL..CovidVaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date
WHERE dea.continent is not null
ORDER BY 2,3

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM (CONVERT(int,vac.new_vaccinations)) OVER (PARTITION BY dea.location)
FROM PORTOFOLIOSQL..CovidDeaths dea
Join PORTOFOLIOSQL..CovidVaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date
WHERE dea.continent is not null
ORDER BY 2,3

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM (CONVERT(int,vac.new_vaccinations)) OVER (PARTITION BY dea.location, dea.date) as RollingPeopleVaccinated 
FROM PORTOFOLIOSQL..CovidDeaths dea
Join PORTOFOLIOSQL..CovidVaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date
WHERE dea.continent is not null
ORDER BY 2,3

--USE CTE

With PopvsVac (Continent, Location, Date, Population, New_Vaccinations, RollingPeopleVaccinated)
as
(
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM (CONVERT(int,vac.new_vaccinations)) OVER (PARTITION BY dea.location, dea.date) as RollingPeopleVaccinated
FROM PORTOFOLIOSQL..CovidDeaths dea
Join PORTOFOLIOSQL..CovidVaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date
WHERE dea.continent is not null
)

SELECT *, (RollingPeopleVaccinated/Population)*100
FROM PopvsVac


--TEMP TABLE

Create Table #PercentPopulationVaccinated
(
Continent nvarchar(255),
Location nvarchar(255),
Date datetime,
Population numeric,
New_vaccinations numeric,
RollingPeopleVaccinated numeric
)

Insert into #PercentPopulationVaccinated
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
From PORTOFOLIOSQL..CovidDeaths dea
Join PORTOFOLIOSQL..CovidVaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date
--where dea.continent is not null 
--order by 2,3

Select *, (RollingPeopleVaccinated/Population)*100
From #PercentPopulationVaccinated


-- Creating View to store data for later visualizations

Create View PercentPopulationVaccinated as
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
From PORTOFOLIOSQL..CovidDeaths dea
Join PORTOFOLIOSQL..CovidVaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null


